{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getReactElementRef;\nvar React = _interopRequireWildcard(require(\"react\"));\n/**\n * Returns the ref of a React element handling differences between React 19 and older versions.\n * It will throw runtime error if the element is not a valid React element.\n *\n * @param element React.ReactElement\n * @returns React.Ref<any> | null\n */\nfunction getReactElementRef(element) {\n  // 'ref' is passed as prop in React 19, whereas 'ref' is directly attached to children in older versions\n  if (parseInt(React.version, 10) >= 19) {\n    var _element$props;\n    return (element === null || element === void 0 || (_element$props = element.props) === null || _element$props === void 0 ? void 0 : _element$props.ref) || null;\n  }\n  // @ts-expect-error element.ref is not included in the ReactElement type\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/70189\n  return (element === null || element === void 0 ? void 0 : element.ref) || null;\n}","map":{"version":3,"names":["_interopRequireWildcard","require","default","Object","defineProperty","exports","value","getReactElementRef","React","element","parseInt","version","_element$props","props","ref"],"sources":["/Users/deepshikha/Documents/vjepa2-robot-control/frontend/node_modules/@mui/utils/getReactElementRef/getReactElementRef.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getReactElementRef;\nvar React = _interopRequireWildcard(require(\"react\"));\n/**\n * Returns the ref of a React element handling differences between React 19 and older versions.\n * It will throw runtime error if the element is not a valid React element.\n *\n * @param element React.ReactElement\n * @returns React.Ref<any> | null\n */\nfunction getReactElementRef(element) {\n  // 'ref' is passed as prop in React 19, whereas 'ref' is directly attached to children in older versions\n  if (parseInt(React.version, 10) >= 19) {\n    return element?.props?.ref || null;\n  }\n  // @ts-expect-error element.ref is not included in the ReactElement type\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/70189\n  return element?.ref || null;\n}"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAC9FC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACH,OAAO,GAAGK,kBAAkB;AACpC,IAAIC,KAAK,GAAGR,uBAAuB,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,kBAAkBA,CAACE,OAAO,EAAE;EACnC;EACA,IAAIC,QAAQ,CAACF,KAAK,CAACG,OAAO,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE;IAAA,IAAAC,cAAA;IACrC,OAAO,CAAAH,OAAO,aAAPA,OAAO,gBAAAG,cAAA,GAAPH,OAAO,CAAEI,KAAK,cAAAD,cAAA,uBAAdA,cAAA,CAAgBE,GAAG,KAAI,IAAI;EACpC;EACA;EACA;EACA,OAAO,CAAAL,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEK,GAAG,KAAI,IAAI;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}