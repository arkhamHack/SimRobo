{"ast":null,"code":"\"use strict\";\n'use client';\n\nvar _objectSpread = require(\"/Users/deepshikha/Documents/vjepa2-robot-control/frontend/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _objectWithoutProperties = require(\"/Users/deepshikha/Documents/vjepa2-robot-control/frontend/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\").default;\nconst _excluded = [\"className\", \"elementType\", \"ownerState\", \"externalForwardedProps\", \"internalForwardedProps\", \"shouldForwardComponentProp\"],\n  _excluded2 = [\"component\", \"slots\", \"slotProps\"],\n  _excluded3 = [\"component\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useSlot;\nvar _useForkRef = _interopRequireDefault(require(\"@mui/utils/useForkRef\"));\nvar _appendOwnerState = _interopRequireDefault(require(\"@mui/utils/appendOwnerState\"));\nvar _resolveComponentProps = _interopRequireDefault(require(\"@mui/utils/resolveComponentProps\"));\nvar _mergeSlotProps = _interopRequireDefault(require(\"@mui/utils/mergeSlotProps\"));\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nfunction useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n      className,\n      elementType: initialElementType,\n      ownerState,\n      externalForwardedProps,\n      internalForwardedProps,\n      shouldForwardComponentProp = false\n    } = parameters,\n    useSlotPropsParams = _objectWithoutProperties(parameters, _excluded);\n  const {\n      component: rootComponent,\n      slots = {\n        [name]: undefined\n      },\n      slotProps = {\n        [name]: undefined\n      }\n    } = externalForwardedProps,\n    other = _objectWithoutProperties(externalForwardedProps, _excluded2);\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = (0, _resolveComponentProps.default)(slotProps[name], ownerState);\n  const _ref = (0, _mergeSlotProps.default)(_objectSpread(_objectSpread({\n      className\n    }, useSlotPropsParams), {}, {\n      externalForwardedProps: name === 'root' ? other : undefined,\n      externalSlotProps: resolvedComponentsProps\n    })),\n    {\n      props: {\n        component: slotComponent\n      },\n      internalRef\n    } = _ref,\n    mergedProps = _objectWithoutProperties(_ref.props, _excluded3);\n  const ref = (0, _useForkRef.default)(internalRef, resolvedComponentsProps === null || resolvedComponentsProps === void 0 ? void 0 : resolvedComponentsProps.ref, parameters.ref);\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = (0, _appendOwnerState.default)(elementType, _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, name === 'root' && !rootComponent && !slots[name] && internalForwardedProps), name !== 'root' && !slots[name] && internalForwardedProps), mergedProps), LeafComponent && !shouldForwardComponentProp && {\n    as: LeafComponent\n  }), LeafComponent && shouldForwardComponentProp && {\n    component: LeafComponent\n  }), {}, {\n    ref\n  }), ownerState);\n  return [elementType, props];\n}","map":{"version":3,"names":["_objectSpread","require","default","_objectWithoutProperties","_excluded","_excluded2","_excluded3","_interopRequireDefault","Object","defineProperty","exports","value","useSlot","_useForkRef","_appendOwnerState","_resolveComponentProps","_mergeSlotProps","name","parameters","className","elementType","initialElementType","ownerState","externalForwardedProps","internalForwardedProps","shouldForwardComponentProp","useSlotPropsParams","component","rootComponent","slots","undefined","slotProps","other","resolvedComponentsProps","_ref","externalSlotProps","props","slotComponent","internalRef","mergedProps","ref","LeafComponent","as"],"sources":["/Users/deepshikha/Documents/vjepa2-robot-control/frontend/node_modules/@mui/material/utils/useSlot.js"],"sourcesContent":["\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useSlot;\nvar _useForkRef = _interopRequireDefault(require(\"@mui/utils/useForkRef\"));\nvar _appendOwnerState = _interopRequireDefault(require(\"@mui/utils/appendOwnerState\"));\nvar _resolveComponentProps = _interopRequireDefault(require(\"@mui/utils/resolveComponentProps\"));\nvar _mergeSlotProps = _interopRequireDefault(require(\"@mui/utils/mergeSlotProps\"));\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nfunction useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n    className,\n    elementType: initialElementType,\n    ownerState,\n    externalForwardedProps,\n    internalForwardedProps,\n    shouldForwardComponentProp = false,\n    ...useSlotPropsParams\n  } = parameters;\n  const {\n    component: rootComponent,\n    slots = {\n      [name]: undefined\n    },\n    slotProps = {\n      [name]: undefined\n    },\n    ...other\n  } = externalForwardedProps;\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = (0, _resolveComponentProps.default)(slotProps[name], ownerState);\n  const {\n    props: {\n      component: slotComponent,\n      ...mergedProps\n    },\n    internalRef\n  } = (0, _mergeSlotProps.default)({\n    className,\n    ...useSlotPropsParams,\n    externalForwardedProps: name === 'root' ? other : undefined,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = (0, _useForkRef.default)(internalRef, resolvedComponentsProps?.ref, parameters.ref);\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = (0, _appendOwnerState.default)(elementType, {\n    ...(name === 'root' && !rootComponent && !slots[name] && internalForwardedProps),\n    ...(name !== 'root' && !slots[name] && internalForwardedProps),\n    ...mergedProps,\n    ...(LeafComponent && !shouldForwardComponentProp && {\n      as: LeafComponent\n    }),\n    ...(LeafComponent && shouldForwardComponentProp && {\n      component: LeafComponent\n    }),\n    ref\n  }, ownerState);\n  return [elementType, props];\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}