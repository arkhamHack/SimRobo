{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/deepshikha/Documents/vjepa2-robot-control/frontend/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = resolveProps;\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param defaultProps\n * @param props\n * @param mergeClassNameAndStyle If `true`, merges `className` and `style` props instead of overriding them.\n *   When `false` (default), props override defaultProps. When `true`, `className` values are concatenated\n *   and `style` objects are merged with props taking precedence.\n * @returns resolved props\n */\nfunction resolveProps(defaultProps, props) {\n  let mergeClassNameAndStyle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const output = _objectSpread({}, props);\n  for (const key in defaultProps) {\n    if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {\n      const propName = key;\n      if (propName === 'components' || propName === 'slots') {\n        output[propName] = _objectSpread(_objectSpread({}, defaultProps[propName]), output[propName]);\n      } else if (propName === 'componentsProps' || propName === 'slotProps') {\n        const defaultSlotProps = defaultProps[propName];\n        const slotProps = props[propName];\n        if (!slotProps) {\n          output[propName] = defaultSlotProps || {};\n        } else if (!defaultSlotProps) {\n          output[propName] = slotProps;\n        } else {\n          output[propName] = _objectSpread({}, slotProps);\n          for (const slotKey in defaultSlotProps) {\n            if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {\n              const slotPropName = slotKey;\n              output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName], mergeClassNameAndStyle);\n            }\n          }\n        }\n      } else if (propName === 'className' && mergeClassNameAndStyle && props.className) {\n        output.className = (0, _clsx.default)(defaultProps === null || defaultProps === void 0 ? void 0 : defaultProps.className, props === null || props === void 0 ? void 0 : props.className);\n      } else if (propName === 'style' && mergeClassNameAndStyle && props.style) {\n        output.style = _objectSpread(_objectSpread({}, defaultProps === null || defaultProps === void 0 ? void 0 : defaultProps.style), props === null || props === void 0 ? void 0 : props.style);\n      } else if (output[propName] === undefined) {\n        output[propName] = defaultProps[propName];\n      }\n    }\n  }\n  return output;\n}","map":{"version":3,"names":["_objectSpread","require","default","_interopRequireDefault","Object","defineProperty","exports","value","resolveProps","_clsx","defaultProps","props","mergeClassNameAndStyle","arguments","length","undefined","output","key","prototype","hasOwnProperty","call","propName","defaultSlotProps","slotProps","slotKey","slotPropName","className","style"],"sources":["/Users/deepshikha/Documents/vjepa2-robot-control/frontend/node_modules/@mui/utils/resolveProps/resolveProps.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = resolveProps;\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param defaultProps\n * @param props\n * @param mergeClassNameAndStyle If `true`, merges `className` and `style` props instead of overriding them.\n *   When `false` (default), props override defaultProps. When `true`, `className` values are concatenated\n *   and `style` objects are merged with props taking precedence.\n * @returns resolved props\n */\nfunction resolveProps(defaultProps, props, mergeClassNameAndStyle = false) {\n  const output = {\n    ...props\n  };\n  for (const key in defaultProps) {\n    if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {\n      const propName = key;\n      if (propName === 'components' || propName === 'slots') {\n        output[propName] = {\n          ...defaultProps[propName],\n          ...output[propName]\n        };\n      } else if (propName === 'componentsProps' || propName === 'slotProps') {\n        const defaultSlotProps = defaultProps[propName];\n        const slotProps = props[propName];\n        if (!slotProps) {\n          output[propName] = defaultSlotProps || {};\n        } else if (!defaultSlotProps) {\n          output[propName] = slotProps;\n        } else {\n          output[propName] = {\n            ...slotProps\n          };\n          for (const slotKey in defaultSlotProps) {\n            if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {\n              const slotPropName = slotKey;\n              output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName], mergeClassNameAndStyle);\n            }\n          }\n        }\n      } else if (propName === 'className' && mergeClassNameAndStyle && props.className) {\n        output.className = (0, _clsx.default)(defaultProps?.className, props?.className);\n      } else if (propName === 'style' && mergeClassNameAndStyle && props.style) {\n        output.style = {\n          ...defaultProps?.style,\n          ...props?.style\n        };\n      } else if (output[propName] === undefined) {\n        output[propName] = defaultProps[propName];\n      }\n    }\n  }\n  return output;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}