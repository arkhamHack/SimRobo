{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/deepshikha/Documents/vjepa2-robot-control/frontend/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _objectWithoutProperties = require(\"/Users/deepshikha/Documents/vjepa2-robot-control/frontend/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\").default;\nconst _excluded = [\"variants\"],\n  _excluded2 = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createStyled;\nexports.shouldForwardProp = shouldForwardProp;\nexports.systemDefaultTheme = void 0;\nvar _styledEngine = _interopRequireWildcard(require(\"@mui/styled-engine\"));\nvar _deepmerge = require(\"@mui/utils/deepmerge\");\nvar _capitalize = _interopRequireDefault(require(\"@mui/utils/capitalize\"));\nvar _getDisplayName = _interopRequireDefault(require(\"@mui/utils/getDisplayName\"));\nvar _createTheme = _interopRequireDefault(require(\"../createTheme\"));\nvar _styleFunctionSx = _interopRequireDefault(require(\"../styleFunctionSx\"));\nvar _preprocessStyles = _interopRequireDefault(require(\"../preprocessStyles\"));\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-labels */\n/* eslint-disable no-lone-blocks */\n\nconst systemDefaultTheme = exports.systemDefaultTheme = (0, _createTheme.default)();\n\n// Update /system/styled/#api in case if this changes\nfunction shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nfunction shallowLayer(serialized, layerName) {\n  if (layerName && serialized && typeof serialized === 'object' && serialized.styles && !serialized.styles.startsWith('@layer') // only add the layer if it is not already there.\n  ) {\n    serialized.styles = \"@layer \".concat(layerName, \"{\").concat(String(serialized.styles), \"}\");\n  }\n  return serialized;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (_props, styles) => styles[slot];\n}\nfunction attachTheme(props, themeId, defaultTheme) {\n  props.theme = isObjectEmpty(props.theme) ? defaultTheme : props.theme[themeId] || props.theme;\n}\nfunction processStyle(props, style, layerName) {\n  /*\n   * Style types:\n   *  - null/undefined\n   *  - string\n   *  - CSS style object: { [cssKey]: [cssValue], variants }\n   *  - Processed style object: { style, variants, isProcessed: true }\n   *  - Array of any of the above\n   */\n\n  const resolvedStyle = typeof style === 'function' ? style(props) : style;\n  if (Array.isArray(resolvedStyle)) {\n    return resolvedStyle.flatMap(subStyle => processStyle(props, subStyle, layerName));\n  }\n  if (Array.isArray(resolvedStyle === null || resolvedStyle === void 0 ? void 0 : resolvedStyle.variants)) {\n    let rootStyle;\n    if (resolvedStyle.isProcessed) {\n      rootStyle = layerName ? shallowLayer(resolvedStyle.style, layerName) : resolvedStyle.style;\n    } else {\n      const {\n          variants\n        } = resolvedStyle,\n        otherStyles = _objectWithoutProperties(resolvedStyle, _excluded);\n      rootStyle = layerName ? shallowLayer((0, _styledEngine.internal_serializeStyles)(otherStyles), layerName) : otherStyles;\n    }\n    return processStyleVariants(props, resolvedStyle.variants, [rootStyle], layerName);\n  }\n  if (resolvedStyle !== null && resolvedStyle !== void 0 && resolvedStyle.isProcessed) {\n    return layerName ? shallowLayer((0, _styledEngine.internal_serializeStyles)(resolvedStyle.style), layerName) : resolvedStyle.style;\n  }\n  return layerName ? shallowLayer((0, _styledEngine.internal_serializeStyles)(resolvedStyle), layerName) : resolvedStyle;\n}\nfunction processStyleVariants(props, variants) {\n  let results = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let layerName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  let mergedState; // We might not need it, initialized lazily\n\n  variantLoop: for (let i = 0; i < variants.length; i += 1) {\n    const variant = variants[i];\n    if (typeof variant.props === 'function') {\n      mergedState !== null && mergedState !== void 0 ? mergedState : mergedState = _objectSpread(_objectSpread(_objectSpread({}, props), props.ownerState), {}, {\n        ownerState: props.ownerState\n      });\n      if (!variant.props(mergedState)) {\n        continue;\n      }\n    } else {\n      for (const key in variant.props) {\n        var _props$ownerState;\n        if (props[key] !== variant.props[key] && ((_props$ownerState = props.ownerState) === null || _props$ownerState === void 0 ? void 0 : _props$ownerState[key]) !== variant.props[key]) {\n          continue variantLoop;\n        }\n      }\n    }\n    if (typeof variant.style === 'function') {\n      mergedState !== null && mergedState !== void 0 ? mergedState : mergedState = _objectSpread(_objectSpread(_objectSpread({}, props), props.ownerState), {}, {\n        ownerState: props.ownerState\n      });\n      results.push(layerName ? shallowLayer((0, _styledEngine.internal_serializeStyles)(variant.style(mergedState)), layerName) : variant.style(mergedState));\n    } else {\n      results.push(layerName ? shallowLayer((0, _styledEngine.internal_serializeStyles)(variant.style), layerName) : variant.style);\n    }\n  }\n  return results;\n}\nfunction createStyled() {\n  let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  function styleAttachTheme(props) {\n    attachTheme(props, themeId, defaultTheme);\n  }\n  const styled = function (tag) {\n    let inputOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // If `tag` is already a styled component, filter out the `sx` style function\n    // to prevent unnecessary styles generated by the composite components.\n    (0, _styledEngine.internal_mutateStyles)(tag, styles => styles.filter(style => style !== _styleFunctionSx.default));\n    const {\n        name: componentName,\n        slot: componentSlot,\n        skipVariantsResolver: inputSkipVariantsResolver,\n        skipSx: inputSkipSx,\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\n      } = inputOptions,\n      options = _objectWithoutProperties(inputOptions, _excluded2);\n    const layerName = componentName && componentName.startsWith('Mui') || !!componentSlot ? 'components' : 'custom';\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = (0, _styledEngine.default)(tag, _objectSpread({\n      shouldForwardProp: shouldForwardPropOption,\n      label: generateStyledLabel(componentName, componentSlot)\n    }, options));\n    const transformStyle = style => {\n      // - On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      //   component stays as a function. This condition makes sure that we do not interpolate functions\n      //   which are basically components used as a selectors.\n      // - `style` could be a styled component from a babel plugin for component selectors, This condition\n      //   makes sure that we do not interpolate them.\n      if (style.__emotion_real === style) {\n        return style;\n      }\n      if (typeof style === 'function') {\n        return function styleFunctionProcessor(props) {\n          return processStyle(props, style, props.theme.modularCssLayers ? layerName : undefined);\n        };\n      }\n      if ((0, _deepmerge.isPlainObject)(style)) {\n        const serialized = (0, _preprocessStyles.default)(style);\n        return function styleObjectProcessor(props) {\n          if (!serialized.variants) {\n            return props.theme.modularCssLayers ? shallowLayer(serialized.style, layerName) : serialized.style;\n          }\n          return processStyle(props, serialized, props.theme.modularCssLayers ? layerName : undefined);\n        };\n      }\n      return style;\n    };\n    const muiStyledResolver = function () {\n      const expressionsHead = [];\n      for (var _len = arguments.length, expressionsInput = new Array(_len), _key = 0; _key < _len; _key++) {\n        expressionsInput[_key] = arguments[_key];\n      }\n      const expressionsBody = expressionsInput.map(transformStyle);\n      const expressionsTail = [];\n\n      // Preprocess `props` to set the scoped theme value.\n      // This must run before any other expression.\n      expressionsHead.push(styleAttachTheme);\n      if (componentName && overridesResolver) {\n        expressionsTail.push(function styleThemeOverrides(props) {\n          var _theme$components;\n          const theme = props.theme;\n          const styleOverrides = (_theme$components = theme.components) === null || _theme$components === void 0 || (_theme$components = _theme$components[componentName]) === null || _theme$components === void 0 ? void 0 : _theme$components.styleOverrides;\n          if (!styleOverrides) {\n            return null;\n          }\n          const resolvedStyleOverrides = {};\n\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          // eslint-disable-next-line guard-for-in\n          for (const slotKey in styleOverrides) {\n            resolvedStyleOverrides[slotKey] = processStyle(props, styleOverrides[slotKey], props.theme.modularCssLayers ? 'theme' : undefined);\n          }\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsTail.push(function styleThemeVariants(props) {\n          var _theme$components2;\n          const theme = props.theme;\n          const themeVariants = theme === null || theme === void 0 || (_theme$components2 = theme.components) === null || _theme$components2 === void 0 || (_theme$components2 = _theme$components2[componentName]) === null || _theme$components2 === void 0 ? void 0 : _theme$components2.variants;\n          if (!themeVariants) {\n            return null;\n          }\n          return processStyleVariants(props, themeVariants, [], props.theme.modularCssLayers ? 'theme' : undefined);\n        });\n      }\n      if (!skipSx) {\n        expressionsTail.push(_styleFunctionSx.default);\n      }\n\n      // This function can be called as a tagged template, so the first argument would contain\n      // CSS `string[]` values.\n      if (Array.isArray(expressionsBody[0])) {\n        const inputStrings = expressionsBody.shift();\n\n        // We need to add placeholders in the tagged template for the custom functions we have\n        // possibly added (attachTheme, overrides, variants, and sx).\n        const placeholdersHead = new Array(expressionsHead.length).fill('');\n        const placeholdersTail = new Array(expressionsTail.length).fill('');\n        let outputStrings;\n        // prettier-ignore\n        {\n          outputStrings = [...placeholdersHead, ...inputStrings, ...placeholdersTail];\n          outputStrings.raw = [...placeholdersHead, ...inputStrings.raw, ...placeholdersTail];\n        }\n\n        // The only case where we put something before `attachTheme`\n        expressionsHead.unshift(outputStrings);\n      }\n      const expressions = [...expressionsHead, ...expressionsBody, ...expressionsTail];\n      const Component = defaultStyledResolver(...expressions);\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        Component.displayName = generateDisplayName(componentName, componentSlot, tag);\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n  return styled;\n}\nfunction generateDisplayName(componentName, componentSlot, tag) {\n  if (componentName) {\n    return \"\".concat(componentName).concat((0, _capitalize.default)(componentSlot || ''));\n  }\n  return \"Styled(\".concat((0, _getDisplayName.default)(tag), \")\");\n}\nfunction generateStyledLabel(componentName, componentSlot) {\n  let label;\n  if (process.env.NODE_ENV !== 'production') {\n    if (componentName) {\n      // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n      // For more details: https://github.com/mui/material-ui/pull/37908\n      label = \"\".concat(componentName, \"-\").concat(lowercaseFirstLetter(componentSlot || 'Root'));\n    }\n  }\n  return label;\n}\nfunction isObjectEmpty(object) {\n  // eslint-disable-next-line\n  for (const _ in object) {\n    return false;\n  }\n  return true;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\nfunction lowercaseFirstLetter(string) {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}","map":{"version":3,"names":["_objectSpread","require","default","_objectWithoutProperties","_excluded","_excluded2","_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","exports","value","createStyled","shouldForwardProp","systemDefaultTheme","_styledEngine","_deepmerge","_capitalize","_getDisplayName","_createTheme","_styleFunctionSx","_preprocessStyles","prop","shallowLayer","serialized","layerName","styles","startsWith","concat","String","defaultOverridesResolver","slot","_props","attachTheme","props","themeId","defaultTheme","theme","isObjectEmpty","processStyle","style","resolvedStyle","Array","isArray","flatMap","subStyle","variants","rootStyle","isProcessed","otherStyles","internal_serializeStyles","processStyleVariants","results","arguments","length","undefined","mergedState","variantLoop","i","variant","ownerState","key","_props$ownerState","push","input","rootShouldForwardProp","slotShouldForwardProp","styleAttachTheme","styled","tag","inputOptions","internal_mutateStyles","filter","name","componentName","componentSlot","skipVariantsResolver","inputSkipVariantsResolver","skipSx","inputSkipSx","overridesResolver","lowercaseFirstLetter","options","shouldForwardPropOption","isStringTag","defaultStyledResolver","label","generateStyledLabel","transformStyle","__emotion_real","styleFunctionProcessor","modularCssLayers","isPlainObject","styleObjectProcessor","muiStyledResolver","expressionsHead","_len","expressionsInput","_key","expressionsBody","map","expressionsTail","styleThemeOverrides","_theme$components","styleOverrides","components","resolvedStyleOverrides","slotKey","styleThemeVariants","_theme$components2","themeVariants","inputStrings","shift","placeholdersHead","fill","placeholdersTail","outputStrings","raw","unshift","expressions","Component","muiName","process","env","NODE_ENV","displayName","generateDisplayName","withConfig","object","_","charCodeAt","string","charAt","toLowerCase","slice"],"sources":["/Users/deepshikha/Documents/vjepa2-robot-control/frontend/node_modules/@mui/system/createStyled/createStyled.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createStyled;\nexports.shouldForwardProp = shouldForwardProp;\nexports.systemDefaultTheme = void 0;\nvar _styledEngine = _interopRequireWildcard(require(\"@mui/styled-engine\"));\nvar _deepmerge = require(\"@mui/utils/deepmerge\");\nvar _capitalize = _interopRequireDefault(require(\"@mui/utils/capitalize\"));\nvar _getDisplayName = _interopRequireDefault(require(\"@mui/utils/getDisplayName\"));\nvar _createTheme = _interopRequireDefault(require(\"../createTheme\"));\nvar _styleFunctionSx = _interopRequireDefault(require(\"../styleFunctionSx\"));\nvar _preprocessStyles = _interopRequireDefault(require(\"../preprocessStyles\"));\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-labels */\n/* eslint-disable no-lone-blocks */\n\nconst systemDefaultTheme = exports.systemDefaultTheme = (0, _createTheme.default)();\n\n// Update /system/styled/#api in case if this changes\nfunction shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nfunction shallowLayer(serialized, layerName) {\n  if (layerName && serialized && typeof serialized === 'object' && serialized.styles && !serialized.styles.startsWith('@layer') // only add the layer if it is not already there.\n  ) {\n    serialized.styles = `@layer ${layerName}{${String(serialized.styles)}}`;\n  }\n  return serialized;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (_props, styles) => styles[slot];\n}\nfunction attachTheme(props, themeId, defaultTheme) {\n  props.theme = isObjectEmpty(props.theme) ? defaultTheme : props.theme[themeId] || props.theme;\n}\nfunction processStyle(props, style, layerName) {\n  /*\n   * Style types:\n   *  - null/undefined\n   *  - string\n   *  - CSS style object: { [cssKey]: [cssValue], variants }\n   *  - Processed style object: { style, variants, isProcessed: true }\n   *  - Array of any of the above\n   */\n\n  const resolvedStyle = typeof style === 'function' ? style(props) : style;\n  if (Array.isArray(resolvedStyle)) {\n    return resolvedStyle.flatMap(subStyle => processStyle(props, subStyle, layerName));\n  }\n  if (Array.isArray(resolvedStyle?.variants)) {\n    let rootStyle;\n    if (resolvedStyle.isProcessed) {\n      rootStyle = layerName ? shallowLayer(resolvedStyle.style, layerName) : resolvedStyle.style;\n    } else {\n      const {\n        variants,\n        ...otherStyles\n      } = resolvedStyle;\n      rootStyle = layerName ? shallowLayer((0, _styledEngine.internal_serializeStyles)(otherStyles), layerName) : otherStyles;\n    }\n    return processStyleVariants(props, resolvedStyle.variants, [rootStyle], layerName);\n  }\n  if (resolvedStyle?.isProcessed) {\n    return layerName ? shallowLayer((0, _styledEngine.internal_serializeStyles)(resolvedStyle.style), layerName) : resolvedStyle.style;\n  }\n  return layerName ? shallowLayer((0, _styledEngine.internal_serializeStyles)(resolvedStyle), layerName) : resolvedStyle;\n}\nfunction processStyleVariants(props, variants, results = [], layerName = undefined) {\n  let mergedState; // We might not need it, initialized lazily\n\n  variantLoop: for (let i = 0; i < variants.length; i += 1) {\n    const variant = variants[i];\n    if (typeof variant.props === 'function') {\n      mergedState ?? (mergedState = {\n        ...props,\n        ...props.ownerState,\n        ownerState: props.ownerState\n      });\n      if (!variant.props(mergedState)) {\n        continue;\n      }\n    } else {\n      for (const key in variant.props) {\n        if (props[key] !== variant.props[key] && props.ownerState?.[key] !== variant.props[key]) {\n          continue variantLoop;\n        }\n      }\n    }\n    if (typeof variant.style === 'function') {\n      mergedState ?? (mergedState = {\n        ...props,\n        ...props.ownerState,\n        ownerState: props.ownerState\n      });\n      results.push(layerName ? shallowLayer((0, _styledEngine.internal_serializeStyles)(variant.style(mergedState)), layerName) : variant.style(mergedState));\n    } else {\n      results.push(layerName ? shallowLayer((0, _styledEngine.internal_serializeStyles)(variant.style), layerName) : variant.style);\n    }\n  }\n  return results;\n}\nfunction createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  function styleAttachTheme(props) {\n    attachTheme(props, themeId, defaultTheme);\n  }\n  const styled = (tag, inputOptions = {}) => {\n    // If `tag` is already a styled component, filter out the `sx` style function\n    // to prevent unnecessary styles generated by the composite components.\n    (0, _styledEngine.internal_mutateStyles)(tag, styles => styles.filter(style => style !== _styleFunctionSx.default));\n    const {\n      name: componentName,\n      slot: componentSlot,\n      skipVariantsResolver: inputSkipVariantsResolver,\n      skipSx: inputSkipSx,\n      // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n      // For more details: https://github.com/mui/material-ui/pull/37908\n      overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot)),\n      ...options\n    } = inputOptions;\n    const layerName = componentName && componentName.startsWith('Mui') || !!componentSlot ? 'components' : 'custom';\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = (0, _styledEngine.default)(tag, {\n      shouldForwardProp: shouldForwardPropOption,\n      label: generateStyledLabel(componentName, componentSlot),\n      ...options\n    });\n    const transformStyle = style => {\n      // - On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      //   component stays as a function. This condition makes sure that we do not interpolate functions\n      //   which are basically components used as a selectors.\n      // - `style` could be a styled component from a babel plugin for component selectors, This condition\n      //   makes sure that we do not interpolate them.\n      if (style.__emotion_real === style) {\n        return style;\n      }\n      if (typeof style === 'function') {\n        return function styleFunctionProcessor(props) {\n          return processStyle(props, style, props.theme.modularCssLayers ? layerName : undefined);\n        };\n      }\n      if ((0, _deepmerge.isPlainObject)(style)) {\n        const serialized = (0, _preprocessStyles.default)(style);\n        return function styleObjectProcessor(props) {\n          if (!serialized.variants) {\n            return props.theme.modularCssLayers ? shallowLayer(serialized.style, layerName) : serialized.style;\n          }\n          return processStyle(props, serialized, props.theme.modularCssLayers ? layerName : undefined);\n        };\n      }\n      return style;\n    };\n    const muiStyledResolver = (...expressionsInput) => {\n      const expressionsHead = [];\n      const expressionsBody = expressionsInput.map(transformStyle);\n      const expressionsTail = [];\n\n      // Preprocess `props` to set the scoped theme value.\n      // This must run before any other expression.\n      expressionsHead.push(styleAttachTheme);\n      if (componentName && overridesResolver) {\n        expressionsTail.push(function styleThemeOverrides(props) {\n          const theme = props.theme;\n          const styleOverrides = theme.components?.[componentName]?.styleOverrides;\n          if (!styleOverrides) {\n            return null;\n          }\n          const resolvedStyleOverrides = {};\n\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          // eslint-disable-next-line guard-for-in\n          for (const slotKey in styleOverrides) {\n            resolvedStyleOverrides[slotKey] = processStyle(props, styleOverrides[slotKey], props.theme.modularCssLayers ? 'theme' : undefined);\n          }\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsTail.push(function styleThemeVariants(props) {\n          const theme = props.theme;\n          const themeVariants = theme?.components?.[componentName]?.variants;\n          if (!themeVariants) {\n            return null;\n          }\n          return processStyleVariants(props, themeVariants, [], props.theme.modularCssLayers ? 'theme' : undefined);\n        });\n      }\n      if (!skipSx) {\n        expressionsTail.push(_styleFunctionSx.default);\n      }\n\n      // This function can be called as a tagged template, so the first argument would contain\n      // CSS `string[]` values.\n      if (Array.isArray(expressionsBody[0])) {\n        const inputStrings = expressionsBody.shift();\n\n        // We need to add placeholders in the tagged template for the custom functions we have\n        // possibly added (attachTheme, overrides, variants, and sx).\n        const placeholdersHead = new Array(expressionsHead.length).fill('');\n        const placeholdersTail = new Array(expressionsTail.length).fill('');\n        let outputStrings;\n        // prettier-ignore\n        {\n          outputStrings = [...placeholdersHead, ...inputStrings, ...placeholdersTail];\n          outputStrings.raw = [...placeholdersHead, ...inputStrings.raw, ...placeholdersTail];\n        }\n\n        // The only case where we put something before `attachTheme`\n        expressionsHead.unshift(outputStrings);\n      }\n      const expressions = [...expressionsHead, ...expressionsBody, ...expressionsTail];\n      const Component = defaultStyledResolver(...expressions);\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        Component.displayName = generateDisplayName(componentName, componentSlot, tag);\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n  return styled;\n}\nfunction generateDisplayName(componentName, componentSlot, tag) {\n  if (componentName) {\n    return `${componentName}${(0, _capitalize.default)(componentSlot || '')}`;\n  }\n  return `Styled(${(0, _getDisplayName.default)(tag)})`;\n}\nfunction generateStyledLabel(componentName, componentSlot) {\n  let label;\n  if (process.env.NODE_ENV !== 'production') {\n    if (componentName) {\n      // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n      // For more details: https://github.com/mui/material-ui/pull/37908\n      label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n    }\n  }\n  return label;\n}\nfunction isObjectEmpty(object) {\n  // eslint-disable-next-line\n  for (const _ in object) {\n    return false;\n  }\n  return true;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\nfunction lowercaseFirstLetter(string) {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}